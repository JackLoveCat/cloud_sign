<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fzu.cloudsign.project.sysdict.mapper.DictTypeMapper">
    
    <resultMap type="DictType" id="DictTypeResult">
        <result property="dictTypeId"    column="dict_type_id"    />
        <result property="dictTypeName"    column="dict_type_name"    />
        <result property="dictType"    column="dict_type"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectDictTypeVo">
        select dict_type_id, dict_type_name, dict_type, status, create_by, create_time, update_by, update_time, remark from sys_dict_type
    </sql>

    <select id="selectDictTypeList" parameterType="DictType" resultMap="DictTypeResult">
        <include refid="selectDictTypeVo"/>
        <where>  
            <if test="dictTypeName != null  and dictTypeName != ''"> and dict_type_name like concat('%', #{dictTypeName}, '%')</if>
            <if test="dictType != null  and dictType != ''"> and dict_type = #{dictType}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectDictTypeById" parameterType="Long" resultMap="DictTypeResult">
        <include refid="selectDictTypeVo"/>
        where dict_type_id = #{dictTypeId}
    </select>
        
    <insert id="insertDictType" parameterType="DictType" useGeneratedKeys="true" keyProperty="dictTypeId">
        insert into sys_dict_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="dictTypeName != null  and dictTypeName != ''">dict_type_name,</if>
            <if test="dictType != null  and dictType != ''">dict_type,</if>
            <if test="status != null  and status != ''">status,</if>
            <if test="createBy != null  and createBy != ''">create_by,</if>
            <if test="createTime != null ">create_time,</if>
            <if test="updateBy != null  and updateBy != ''">update_by,</if>
            <if test="updateTime != null ">update_time,</if>
            <if test="remark != null  and remark != ''">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="dictTypeName != null  and dictTypeName != ''">#{dictTypeName},</if>
            <if test="dictType != null  and dictType != ''">#{dictType},</if>
            <if test="status != null  and status != ''">#{status},</if>
            <if test="createBy != null  and createBy != ''">#{createBy},</if>
            <if test="createTime != null ">#{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">#{updateBy},</if>
            <if test="updateTime != null ">#{updateTime},</if>
            <if test="remark != null  and remark != ''">#{remark},</if>
         </trim>
    </insert>

    <update id="updateDictType" parameterType="DictType">
        update sys_dict_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="dictTypeName != null  and dictTypeName != ''">dict_type_name = #{dictTypeName},</if>
            <if test="dictType != null  and dictType != ''">dict_type = #{dictType},</if>
            <if test="status != null  and status != ''">status = #{status},</if>
            <if test="createBy != null  and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null ">create_time = #{createTime},</if>
            <if test="updateBy != null  and updateBy != ''">update_by = #{updateBy},</if>
            <if test="updateTime != null ">update_time = #{updateTime},</if>
            <if test="remark != null  and remark != ''">remark = #{remark},</if>
        </trim>
        where dict_type_id = #{dictTypeId}
    </update>

    <delete id="deleteDictTypeById" parameterType="Long">
        delete from sys_dict_type where dict_type_id = #{dictTypeId}
    </delete>

    <delete id="deleteDictTypeByIds" parameterType="String">
        delete from sys_dict_type where dict_type_id in 
        <foreach item="dictTypeId" collection="array" open="(" separator="," close=")">
            #{dictTypeId}
        </foreach>
    </delete>
    
</mapper>